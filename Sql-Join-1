https://www.linkedin.com/posts/roshan-jha-ind_sql-database-datascience-ugcPost-7315336977648701441-fdu9?utm_source=social_share_send&utm_medium=member_desktop_web&rcm=ACoAADGBvvcBFyVGj4SSCUxJGqcPf4xAFudNKwA


🧩 Tables: Employees & Departments

-- Employees Table
CREATE TABLE Employees (
    Emp_ID INT PRIMARY KEY,
    Emp_Name VARCHAR(50),
    Dept_ID INT
);

INSERT INTO Employees VALUES
(1, 'Alice', 101),
(2, 'Bob', 102),
(3, 'Charlie', NULL),
(4, 'David', 104),
(5, 'Eve', 105);

-- Departments Table
CREATE TABLE Departments (
    Dept_ID INT PRIMARY KEY,
    Dept_Name VARCHAR(50)
);

INSERT INTO Departments VALUES
(101, 'HR'),
(102, 'IT'),
(103, 'Finance'),
(106, 'Marketing');


🧍‍♂️ Customers Table
customer_id	name	email	city
1	Alice	alice@example.com	New York
2	Bob	bob@example.com	Chicago
3	Charlie	charlie@xyz.com	San Diego
4	Diana	diana@abc.com	Boston
5	Evan	evan@domain.com	Austin

📦 Products Table
product_id	product_name	price
101	Wireless Mouse	25.99
102	USB-C Cable	9.99
103	Mechanical Keyboard	89.99
104	Monitor 24"	149.99
105	Laptop Stand	29.99

🧾 Orders Table
order_id	customer_id	product_id	quantity	order_date
1001	1	101	2	2024-12-01
1002	2	103	1	2024-12-03
1003	1	102	3	2024-12-05
1004	3	104	1	2024-12-06
1005	5	105	2	2024-12-07


🔍 INNER JOIN 🔹INNER JOIN (only matching records)
🔗 Returns only matching records from both tables

SELECT e.Emp_Name, d.Dept_Name
FROM Employees e
JOIN Departments d ON e.Dept_ID = d.Dept_ID;


📌 Example: List of customers who placed an order
SELECT * FROM Customers c 
INNER JOIN Orders o ON c.CustomerID = o.CustomerID;



📦 LEFT JOIN  🔹 LEFT JOIN (all from left + matches from right)
🧱 All records from the left + matched from the right

SELECT e.Emp_Name, d.Dept_Name
FROM Employees e
LEFT JOIN Departments d ON e.Dept_ID = d.Dept_ID;

📌 Example: List all products, even those with no sales
SELECT * FROM Products p 
LEFT JOIN Orders o ON p.ProductID = o.ProductID;


📩 RIGHT JOIN 🔹 RIGHT JOIN (all from right + matches from left)
🧲 All from the right + matched from the left
SELECT e.Emp_Name, d.Dept_Name
FROM Employees e
RIGHT JOIN Departments d ON e.Dept_ID = d.Dept_ID;


📌 Example: List all orders, even if the customer data is missing
SELECT * FROM Customers c 
RIGHT JOIN Orders o ON c.CustomerID = o.CustomerID;

🌐 FULL OUTER JOIN 🔹 FULL OUTER JOIN (all from both sides)
💫 All records from both tables – matches & non-matches

-- Some databases (e.g., MySQL) don’t support FULL OUTER JOIN directly.
-- Use UNION of LEFT and RIGHT JOIN.

SELECT e.Emp_Name, d.Dept_Name
FROM Employees e
LEFT JOIN Departments d ON e.Dept_ID = d.Dept_ID

UNION

SELECT e.Emp_Name, d.Dept_Name
FROM Employees e
RIGHT JOIN Departments d ON e.Dept_ID = d.Dept_ID;

📌 Example: List of all employees and projects, whether assigned or not
SELECT * FROM Employees e 
FULL OUTER JOIN Projects p ON e.EmpID = p.EmpID;


🔁 SELF JOIN 🔹SELF JOIN (join a table to itself)
🪞 Joins a table to itself (e.g., hierarchy)

CREATE TABLE Employees (
    Emp_ID INT PRIMARY KEY,
    Emp_Name VARCHAR(50),
    Manager_ID INT
);

INSERT INTO Employees VALUES
(1, 'Alice', NULL),
(2, 'Bob', 1),
(3, 'Charlie', 1),
(4, 'David', 2),
(5, 'Eve', 2);

🧪 Query: Who is managed by whom?
SELECT e.Emp_Name AS Employee, m.Emp_Name AS Manager
FROM Employees e
LEFT JOIN Employees m ON e.Manager_ID = m.Emp_ID;


📌 Example: Find managers and their direct reports

SELECT e1.Name AS Employee, e2.Name AS Manager 
FROM Employees e1 
JOIN Employees e2 ON e1.ManagerID = e2.EmpID;



🔹 6. CROSS JOIN (cartesian product)
SELECT e.Emp_Name, d.Dept_Name
FROM Employees e
CROSS JOIN Departments d;

