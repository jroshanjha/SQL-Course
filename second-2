## 02-Feb-2025

What is Realational Database ?
A relational database is a type of database that stores data in one or more tables with predefined schemas.
Table or rows or columms 


A "database" is essentially a collection of organized data stored electronically, 
while a "server" is a computer program or hardware that provides a specific service, 
like storing and managing that database, allowing users to access and manipulate the data within it; 
essentially, a database is the data itself, while a server is the system that hosts and manages that data. 

Key points to remember:
Database:
Think of it as a structured filing cabinet where information is organized in tables and rows. 
Server:
Imagine a computer that acts as a central hub, allowing multiple users to access the data stored in the database. 
Example:
Database:
A customer database on an e-commerce website, containing information like names, addresses, and order history. 
Server:
The computer system running the software that allows customers to access and update their information 
within that database

                       
2. **Setting Up Your Environment**
   - Database software choices: MySQL, PostgreSQL, SQLite, SQL Server, Oracle.
   - Installing a database.
   - Using database interfaces: Command Line, GUI tools like MySQL Workbench or pgAdmin, online platforms.


C    -> Create or new information store in the database.

Create  or CREATE or CrEate or create

R   -> Read or retrive 
Select 

U  -> Update or edit information store in the database

Update 

D  -> Delete information from the database

Delete 



Keys and Constainsts:- 

Validations or relationships between tow or more table 

## Product ( Entity )
product_id , product_name, categories , Price, weight or quantity or etc.  

               5

##   Student ( Entity )
student_id , Name , Age , Gender , Email_Id , Phone number , Course , Active  or deacitve 
            M/F/O               +91 1234567896544              True or False


## Course ( Entity )
course_id , course_name , duration , course_fee , course_description , course_image , course_video





1. Not Null   ( Never store not nulls)

2. Unique   ( Always store unique but may or not null values)

3. Primary Key  ( Always store unique or never null values ) Unique + not null 

4. checks    ( [Male, Female ,Other]) 

5. Defatult  ( False ) eg.. active  users 
Salary   ( base salry by defalutl 10000)

6. Foreign Keys ( )
##   Relationship between entities ( Tables )


Students -> student_id, name, email, password, phone
               1         A   abc@     1123      xyz      

course -> couser_id, name , description,price , validation
            S1       SQL      des       100000    3 months 

purchase -> purchsae_Id, student_id, course_id ,purchase_date 


candidate keys 
( student_id, email ) -> priamey 

1           abc@gmail.com 
2           abc@gmail.com

composite Keys 

## Design of database or table 


## SQL query 

 
create database if not exists sql_course ;

-- if exists or it not exists 

drop database if exists abc;

show databases;



