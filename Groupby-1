# 2025 - Mar 30

-- Group by 
-- Aggregations funcitons ( max , min ,sum ,count ,avg)

-- having 

-- Group by 

-- distinct -> handle duplicate value 

-- let suppose 

-- product 
id , name , price , quantity , category 
1    ABC    1200      2         tech 
2    Pqr    800       1         Fashion 
3    lam    2000      2         Fashion 
4    xyz    1024      1         tech 
5   mouse   299       1         tech 
6  light    300       1         electricty 

-- Aggregations funcitons ( max , min ,sum ,count ,avg)

-- quantity 
1   --> 4   , 1024 ( max ) ,  299  ( min  ) ,  2423 ( sum ) , 606 ( avg )
2  -- > 2    < 2000( max) ,  1200 ( min )  , 3200 ( sum) , 1600( avg )

-- sum of  total records / total numbers of records 
-- 1200 + 2000 
-- 3200 / 2 = 1600

-- category 
-- tech   -- 3 
-- Fashoion   -- 3
-- electricty  -- 1

-- quantity , category 
2         tech  ( 1 times )
1         Fashion  (1 times  ) 
2         Fashion ( 1 times )
1         tech  (2 times times ) 
1         electricty ( 1 times ) 


-- category 
-- tech   -- 3 
-- Fashoion   -- 3
-- electricty  -- 1

having count(*) >2

use quiz_app

select * from loan_data

select loan_amnt from loan_data;

-- min 
select min(loan_amnt) from loan_data;
select loan_amnt from loan_data order by loan_amnt limit 1;

-- max
select max(loan_amnt) from loan_data;
select loan_amnt from loan_data order by loan_amnt desc limit 5;

-- sum
select sum(loan_amnt) from loan_data;

-- avg 
-- max
select avg(loan_amnt) from loan_data;


-- product 
id , name , price , quantity , category 
1    ABC    1200      2         tech 
2    Pqr    800       1         Fashion 
3    lam    2000      2         Fashion 
4    null    1024      1         tech 
5   mouse   299       1         tech 
6   null    300       1         electricty 
null null   null      null       null

-- count ( strtick )
select count(*) from loan_data;
-- select * from loan_data order by person_age desc
-- Output : 6
select count(name) from loan_data;
-- Output : 4

create table product_test(
id int, 
name varchar(30),
price int ,
quantity int,
category varchar(30)
)

describe product_test

-- Insert records 
insert into product_test(id , name , price , quantity , category)
values(1,null,1024,1,'tech'),
(2,'mOuSe',299,1,'tech'),
(null,null,null,null,null)

select * from product_test

-- count total numbers of records
select count(*) from product_test

-- total numbers of values
select count(name) from product_test 
-- 1
select count(quantity) from product_test

insert into product_test(id , name , price , quantity , category)
values (4,null,null,null,null)

select * from loan_data

-- Truncate product_test
truncate product_test

select * from product_test



-- from , where , group by , having , select , order by , limit , offset 
